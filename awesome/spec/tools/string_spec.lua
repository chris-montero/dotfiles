
local tstring = require("tools.string");

describe("tools.tstring", function()
    describe("startsWith", function()
        it("'Hello World' starts with 'H'", function()
            assert(tstring.startsWith("Hello World", "Hello"))
        end)
        it("'Hello World' starts with 'Hello'", function()
            assert(tstring.startsWith("Hello World", "Hello"))
        end)
    end)

    describe("endsWith", function()
        it("'Testing' does not end with 'o'", function()
            assert.is_false(tstring.endsWith("Testing", "o"))
        end)
        it("'Testing' ends with 'g'", function()
            assert.is_true(tstring.endsWith("Testing", "g"))
        end)
        it("'Hello World' should end with 'World'", function()
            assert.is_true(tstring.endsWith("Hello World", "World"))
        end)
        it("'Hello Kitty' should not end with 'World'", function()
            assert.is_false(tstring.endsWith("Hello Kitty", "World"))
        end)
    end)

    describe("trimLeft", function()
        it("Trims 'H' from 'Hello', resulting in 'ello'.", function()
            assert.are.same(tstring.trimLeft("Hello", "H"), "ello")
        end)
        it("Only trims matching characters from the left side.", function()
            assert.are.same(tstring.trimLeft("/home/", "/"), "home/")
        end)
        it("Trims ' ' from '         Many spaces before', resulting in 'Many spaces before'", function()
            assert.are.same(tstring.trimLeft("         Many spaces before", " "), "Many spaces before")
        end)
    end)

    describe("trimRight", function()
        it("Trims 'o' from 'Hello', resulting in 'Hell'", function()
            assert.are.same(tstring.trimRight("Hello", "o"), 'Hell')
        end)
        it("Only trims matching characters from the right side.", function()
            assert.are.same(tstring.trimRight("/hello/", "/"), "/hello")
        end)
        it("Trims ' ' from 'Many spaces after         ', resulting in 'Many spaces'", function()
            assert.are.same(tstring.trimRight("Many spaces         ", " "), "Many spaces")
        end)

    end)

    describe("removeLeft", function()
        it("Removes 'H' from 'Hello', resulting in 'ello'", function()
            assert.are.same(tstring.removeLeft("Hello", "H"), "ello")
        end)
        it("Removes 'He' from 'Hello', resulting in 'llo'", function()
            assert.are.same(tstring.removeLeft("Hello", "He"), "llo")
        end)
        it("Removes 'Hello' from 'Hello', resulting in ''", function()
            assert.are.same(tstring.removeLeft("Hello", "Hello"), "")
        end)
    end)

    describe("removeRight", function()
        it("Removes 'llo' from 'Hello', resulting in 'He'", function()
            assert.are.same(tstring.removeRight("Hello", "llo"), "He")
        end)
        it("Removes 'ld' from 'World', resulting in 'Wor'", function()
            assert.are.same(tstring.removeRight("World", "ld"), "Wor")
        end)
        it("Removes 'd' from 'World', resulting in 'Worl'", function()
            assert.are.same(tstring.removeRight("World", "d"), "Worl")
        end)
    end)

    describe("split", function()
        it("Splits 'H' in the table { 'H' }.", function()
            assert.are.same(tstring.split("H"), { 'H' })
        end)
        it("Splits 'Hello' in the table { 'H', 'e', 'l', 'l', 'o' }.", function()
            assert.are.same(tstring.split("Hello"), { 'H', 'e', 'l', 'l', 'o' })
        end)
    end)

end)


